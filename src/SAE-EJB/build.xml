<project name="SAE-EJB" default="build" basedir="." xmlns:jacoco="antlib:org.jacoco.ant">

	<!-- dependencias de compilacion -->
	<property name="java.src" value="ejbModule" />
	<property name="SAE-EAR.lib" value="../SAE-EAR/EarContent/lib" />
	<!-- dependencias de compilacion con los proyectos client -->
	<property name="SAE-EJBClient.lib" value="../SAE-EJBClient/build/jar" />
	<property name="result.dir" location="build/jacoco"/>
	<property name="result.report.dir" location="${result.dir}/site/jacoco"/>
	<property name="result.exec.file" location="${result.dir}/jacoco.exec"/>
	<taskdef uri="antlib:org.jacoco.ant" resource="org/jacoco/ant/antlib.xml">
		<classpath path="../SAE-Config/libs/org.jacoco.ant-0.8.7.jar"/>
		<classpath path="../SAE-Config/libs/org.jacoco.core-0.8.7.jar"/>
		<classpath path="../SAE-Config/libs/org.jacoco.report-0.8.7.jar"/>
		<classpath path="../SAE-Config/libs/org.jacoco.agent-0.8.7.jar"/>
		<classpath path="../SAE-Config/libs/asm-9.2.jar"/>
		<classpath path="../SAE-Config/libs/asm-analysis-9.2.jar"/>
		<classpath path="../SAE-Config/libs/asm-commons-9.2.jar"/>
		<classpath path="../SAE-Config/libs/asm-tree-9.2.jar"/>
		<classpath path="../SAE-Config/libs/asm-util-9.2.jar"/>
	</taskdef>
	<path id="test.classpath">
		<pathelement path="build/test"/>
		<pathelement path="build/classes"/>
		<pathelement path="../SAE-EJBClient/build/classes"/>
		<fileset dir="../SAE-Config/libs" includes="*.jar" />
	</path>

	<tstamp>
		<format property="TODAY" pattern="yyyy-MM-dd HH:mm:ss" />
	</tstamp>

	<!-- PATH -->
	<path id="base.path">
		<fileset dir="../SAE-Config/libs">
			<include name="**/*.jar" />
		</fileset>
		<fileset dir="${SAE-EJBClient.lib}">
			<include name="**/*.jar" />
		</fileset>
	</path>
	
	<target name="clean">
		<sequential>
			<mkdir dir="build" />
			<delete quiet="true">
				<fileset dir="build">
					<include name="**/*" />
				</fileset>
			</delete>
			<mkdir dir="build/classes" />
			<mkdir dir="build/jar" />
			<mkdir dir="build/test" />
		</sequential>
	</target>
	
	<target name="compile" depends="clean">
		<manifest file="build/MANIFEST.MF">
			<attribute name="Built-By" value="${user.name}" />
			<attribute name="Built-Date" value="${TODAY}" />
		</manifest>
		<javac srcdir="${java.src}" destdir="build/classes" target="1.7" encoding="UTF-8" includeantruntime="false" debug="true">
			<classpath>
				<path refid="base.path" />
			</classpath>
		</javac>
		<javac destdir="build/test" classpathref="test.classpath" srcdir="test" includeantruntime="false" debug="true"/>
    <copy todir="build/classes">
        <fileset dir="${java.src}" excludes="**/*.java,META-INF/*template*" />
    </copy>
	</target>	
	
	<target name="build" depends="compile,clean,test,verifyNoError,verifyNoFailure">
		<!-- Parametrizo el jboss.xml segun el tipo de build  -->
		<copy todir="build/classes/META-INF" overwrite="true">
			<fileset dir="${java.src}/META-INF">
				<include name="jboss-template.xml" />
			</fileset>
			<mapper type="regexp" from="(.*)-template.*" to="\1.xml" />
			<filterset>
				<!-- ¿Que dominio de seguridad utiliza para asegurar los ejbs? -->
				<filter token="SAE_SECURITY_DOMAIN" value="${build.security.domain.jndi}" />
				<!-- ¿Cual es la ruta base de publicacion en el arbol jndi de los EJBs de SAE? -->
				<filter token="SAE_EJB_JNDI_BASE" value="${build.sae.service.ejb.jndi_base}" />
			</filterset>
		</copy>
		<!-- Parametrizo el persistence.xml segun el tipo de build -->
		<!-- ¿Creacion automatica del esquema? -->
		<replaceregexp 
			file="build/classes/META-INF/persistence.xml" 
			match="&lt;property[^&gt;]+hibernate\.hbm2ddl\.auto[^&gt;]+/&gt;"
			replace='&lt;property name="hibernate.hbm2ddl.auto" value="${build.persistence.hibernate.hbm2ddl.auto}" /&gt;'
			flags="-s"
		/>
		<!-- ¿Que datasource uso para la persistencia? -->
		<replaceregexp 
			file="build/classes/META-INF/persistence.xml" 
			match="&lt;jta-data-source *&gt;[^&gt;]*&lt;/ *jta-data-source *&gt;"
			replace="&lt;jta-data-source&gt;java:/${build.sae.datasource}&lt;/jta-data-source&gt;"
			flags="-s"
		/>
		<!-- ¿Nombre del ejb-client.jar? -->
		<replaceregexp 
			file="build/classes/META-INF/ejb-jar.xml"
			match="&lt;ejb-client-jar *&gt;[^&gt;]*&lt;/ *ejb-client-jar *&gt;"
			replace="&lt;ejb-client-jar&gt;${build.sae.service.ejb.client}.jar&lt;/ejb-client-jar&gt;"
			flags="-s"
		/>
		<jar destfile="build/jar/${build.sae.service.ejb}.jar" filesetmanifest="merge" manifest="build/MANIFEST.MF" duplicate="fail">
			<metainf dir="build/classes/META-INF"/>
			<fileset dir="build/classes">
				<exclude name="META-INF/**"/>
			</fileset>
		</jar>
	</target>

	<target name="test" depends="compile">
		<jacoco:coverage destfile="${result.exec.file}">
			<junit showoutput="yes" fork="true" printsummary="yes" haltonfailure="yes" haltonerror="yes" failureProperty="test.failure" errorProperty="test.error">
				<formatter type="plain" usefile="false"/>
				<classpath refid="test.classpath"/>
				<test name="uy.gub.imm.sae.business.ejb.facade.AgendarReservasBeanTest" outfile="result"/>
				<test name="uy.gub.imm.sae.business.ejb.facade.RecursosBeanTest" outfile="result"/>
			</junit>
		</jacoco:coverage>
	</target>


	<target name="verifyNoError" if="test.error">
		<fail message="JUnit test or tests errors."/>
	</target>

	<target name="verifyNoFailure" if="test.failure">
		<fail message="JUnit test or tests failed."/>
	</target>
	<target name="report" depends="test">
		<!--  Step 3: Create coverage report  -->
		<jacoco:report>
			<executiondata>
				<file file="${result.exec.file}"/>
			</executiondata>
			<structure name="JaCoCo Ant">
				<classfiles>
					<fileset dir="build/classes"/>
				</classfiles>
				<sourcefiles encoding="UTF-8">
					<fileset dir="${java.src}"/>
				</sourcefiles>
			</structure>
			<html destdir="${result.report.dir}"/>
			<xml destfile="${result.report.dir}/report.xml"/>
		</jacoco:report>
	</target>
</project>