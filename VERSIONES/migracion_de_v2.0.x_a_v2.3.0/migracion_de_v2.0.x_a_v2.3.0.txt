## Procedimiento de migración de una instalación de SAE versión 2.0.x a la versión 2.3.0

1 - Detener el servidor de aplicaciones JBoss AS.
2 - [Solo si se parte de 2.0.2 o anterior] Actualizar el módulo oracle-jsfapi: remplazar el contenido de la carpeta <jboss>/modules/javax/faces/api/main con los archivos del paquete oracle-jsfapi.zip.
3 - [Solo si se parte de 2.0.2 o anterior] Actualizar el módulo oracle-jsfimpl: remplazar el contenido de la carpeta <jboss>/modules/com/sun/jsf-impl/main con los archivos del paquete oracle-jsfimpl.zip.
4 - [Solo si se parte de 2.0.7 o anterior] Actualizar la configuración de JBoss añadiendo lo siguiente dentro de la sección <system-properties> del archivo standalone.xml: <property name="org.apache.catalina.connector.URI_ENCODING" value="UTF-8"/>
4 - Actualizar el esquema global de la base de datos: ejecutar en la base de datos el script migracion_de_v2.0.x_a_v2.3.0-global.sql, pero solo las secciones correspondientes a las versiones posteriores a la actual (por ejemplo, si la versión actual es la 2.0.0 se debe ejecutar a partir de la sección 2.0.1 inclusive).
5 - Actualizar todos los esquemas de empresas de la base de datos: ejecutar en la base de datos el script migracion_de_v2.0.x_a_v2.3.0-esquema.sql, pero solo las secciones correspondientes a las versiones posteriores a la actual (por ejemplo, si la versión actual es la 2.0.0 se debe ejecutar a partir de la sección 2.0.1 inclusive), cambiando dentro del archivo el texto "{esquema}" por el nombre del esquema correspondiente.
6 - Reinstalar la aplicación: redeployar los cuatro archivos que componen la aplicación (sae-1-recursos.ear, sae-1-service.ear, sae-2-backoffice.ear y sae-2-frontend.ear), teniendo en cuenta que podría ser necesario volver a configurar los últimos dos modificando convenientemente los archivos web.xml y jboss-web.xml como se explica en el manual de instalación; nota: se puede copiar estos archivos directamente de la instalación de la versión 2.0.x que está en funcionamiento).
7 - Iniciar el servidor de aplicaciones JBoss AS.

================================================================================================================================================================================

Nota 1

Se detectó que en algunas instalaciones se está utilizando un archivo web.xml para el backend que está desactualizado. Esto ocasiona que los servicios web REST no están disponibles
en esas instalaciones.

Para determinar si en una instalación ocurre este problema se debe hacer lo siguiente:
  1 - Abrir el archivo sae-2-backoffice.ear
  2 - Abrir el archivo sae-backoffice.war
  3 - Abrir el archivo web.xml que se encuentra en la carpeta WEB-INF.
  4 - Buscar el siguiente texto: "<servlet-name>resteasy-servlet</servlet-name>"
  
Si dicho texto no se encuentra entonces el archivo web.xml está desactualizado. Para actualizarlo se debe añadir lo siguiente después del último tag <context-param>:

  <context-param>
    <param-name>resteasy.scan</param-name>
    <param-value>true</param-value>
  </context-param>  
  <context-param>
    <param-name>resteasy.servlet.mapping.prefix</param-name>
    <param-value>/rest</param-value>
  </context-param>  
  <listener>
    <listener-class>org.jboss.resteasy.plugins.server.servlet.ResteasyBootstrap</listener-class>
  </listener>
  <servlet>
    <servlet-name>resteasy-servlet</servlet-name>
    <servlet-class>org.jboss.resteasy.plugins.server.servlet.HttpServletDispatcher</servlet-class>
  </servlet>
  <servlet-mapping>
    <servlet-name>resteasy-servlet</servlet-name>
    <url-pattern>/rest/*</url-pattern>
  </servlet-mapping>  


Para futuras versiones este problema no se presentará ya que se continuará utilizando el archivo web.xml actualizado.
  
================================================================================================================================================================================

Nota 2

A partir de la versión 2.0.4 se incluye la posibilidad de configurar por base de datos las URLs finales de los servicios web de Trazabilidad, Trámites y Notificaciones. Para esto se añadieron las siguientes propiedades que opcionalmente pueden ponerse en la tabla global.ae_configuracion:

Trazabilidad:
  * WS_TRAZABILIDAD_LOCATION_CABEZAL
    En testing el valor debería ser "https://testservicios.pge.red.uy:6227/itramites/cabezalService"
  * WS_TRAZABILIDAD_LOCATION_LINEA
    En testing el valor debería ser "https://testservicios.pge.red.uy:6224/itramites/lineaService"
Novedades
  * WS_NOVEDADES_LOCATION
    En testing el valor debería ser "https://testservicios.pge.red.uy:6270/SAENovedades/publicacion"
TrámitesUy
  * WS_TRAMITE_LOCATION_GUIA
    En testing el valor debería ser "http://testing1.hg.com.uy/GuiaTramitesEstado/GuiaTramites/GuiaTramites.asmx"
  *WS_TRAMITE_LOCATION_INFO
    En testing el valor debería ser "http://testing1.hg.com.uy/GuiaTramitesEstado/wsTramiteEstandar/wsTramite.asmx"
    
Si estas propiedades no se incluyen en la tabla global.ae_configuracion entonces la aplicación utiliza lo que esté especificado en el respectivo WSDL (que está dentro del archivo servicios.ear). Esto significa que estas propiedades son opcionales y nada deja de funcionar si no están presentes (pero la aplicación apunta a los ambientes de testing respectivos).

La idea de incluir estas propiedades es permitir configurar en la base de datos las URLs para no tener que modificar el archivo EAR antes de pasarlo a producción (porque los WSDL todos tienen las rutas de testing).

Estas propiedades están documentadas en el manual de instalación versión 1.23 y posteriores.
